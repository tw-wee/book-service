buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("io.spring.gradle:dependency-management-plugin:$dependencyManagementVersion")
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'

sourceCompatibility = "$javaVersion"
targetCompatibility = "$javaVersion"

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("mysql:mysql-connector-java:$mysqlVersion")
    compile("io.springfox:springfox-swagger2:$swaggerVersion")
    compile("io.springfox:springfox-swagger-ui:$swaggerVersion")
    compile("ma.glasnost.orika:orika-core:$orikaVersion")
    testCompile("com.jayway.jsonpath:json-path:$jsonpathVersion")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/intg/java', 'src/test/unit/java']
        resources.srcDirs = ['src/test/intg/resources', 'src/test/unit/resources']
    }
}

test {
    include '**/*Test.class'
    exclude '**/*IntegrationTest.class'
}

task intgTest(type: Test, dependsOn: test) {
    include '**/*IntegrationTest.class'
}

build.dependsOn intgTest


jar {
    manifest {
        attributes(
                'Main-Class': 'com.wee.BookApiApplication'
        )
    }
    baseName = project.name
    version = "$jarVersion"
}

idea.project {
    jdkName = "$javaVersion"
    languageLevel = "$javaVersion"
    vcs = "Git"
}

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

applicationDefaultJvmArgs = [
        "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=9999"
]
